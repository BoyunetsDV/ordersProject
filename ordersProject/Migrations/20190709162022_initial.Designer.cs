// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ordersProject.Context;

namespace ordersProject.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190709162022_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ordersProject.Models.BillingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillCity");

                    b.Property<string>("BillEmail");

                    b.Property<string>("BillFName");

                    b.Property<string>("BillStreet");

                    b.Property<string>("BillStreetNr");

                    b.Property<string>("BillZip");

                    b.Property<int?>("CountryKey");

                    b.HasKey("Id");

                    b.HasIndex("CountryKey");

                    b.ToTable("BillingAddress");
                });

            modelBuilder.Entity("ordersProject.Models.Country", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Geo");

                    b.HasKey("Key");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ordersProject.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingAddressId");

                    b.Property<int>("InvoiceNumber");

                    b.Property<DateTime>("OrderDate");

                    b.Property<long>("Oxid");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ordersProject.Models.OrderArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("ArtNum");

                    b.Property<double>("BrutPrice");

                    b.Property<int?>("OrderId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderArticles");
                });

            modelBuilder.Entity("ordersProject.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("MethodName");

                    b.Property<int?>("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ordersProject.Models.BillingAddress", b =>
                {
                    b.HasOne("ordersProject.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryKey");
                });

            modelBuilder.Entity("ordersProject.Models.Order", b =>
                {
                    b.HasOne("ordersProject.Models.BillingAddress", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId");
                });

            modelBuilder.Entity("ordersProject.Models.OrderArticle", b =>
                {
                    b.HasOne("ordersProject.Models.Order")
                        .WithMany("Articles")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("ordersProject.Models.Payment", b =>
                {
                    b.HasOne("ordersProject.Models.Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
